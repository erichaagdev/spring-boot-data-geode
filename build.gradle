import io.spring.gradle.convention.Utils

buildscript {
	ext {
		snapshotBuild = Utils.isSnapshot(project)
		milestoneBuild = Utils.isMilestone(project)
		releaseBuild = Utils.isRelease(project)
	}
	repositories {
		mavenCentral()
		gradlePluginPortal()
		maven { url 'https://repo.spring.io/plugins-release' }
		maven {
			url 'https://repo.spring.io/plugins-snapshot'
			if (project.hasProperty('artifactoryUsername')) {
				credentials {
					username "$artifactoryUsername"
					password "$artifactoryPassword"
				}
			}
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
	}
}

apply plugin: 'io.spring.convention.root'

allprojects {

	group = 'org.springframework.geode'

	repositories {

		if (version.contains('-')) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}
}

subprojects {
	plugins.withType(JavaPlugin) {
		sourceCompatibility = JavaVersion.VERSION_17
	}
}

nohttp {
	source.excludes = [ "**/.gradle/**", "**/.m2/**", "**/build/**", "**/target/**", "**/tmp/**" ]
}

description = 'Spring Boot for Apache Geode'

//ext['spring.version'] = "$springVersion"
//ext['spring-framework.version'] = "$springVersion"
//ext['spring-data-bom.version'] = "$springDataBomVersion"
//ext['spring-session-bom.version'] = "$springSessionBomVersion"
